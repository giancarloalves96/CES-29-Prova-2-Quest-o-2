package test;

import java.io.File;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import exe2.NotVulnerableClass;

public class VulnerabilityTester {

	@Rule
	public ExpectedException expectedEx = ExpectedException.none();
	
	@Test
	public void testNaoPodeMandarArquivoInexistente(){
		expectedEx.expect(IllegalArgumentException.class);
		expectedEx.expectMessage("Arquivo inexistente!");
		
		String nomeInexistente = "esseArquivoNaoExiste";
		int i = 0;
		File file = new File(nomeInexistente);
		while(file.exists()){
			nomeInexistente="esseArquivoNaoExiste"+i++;
			file = new File(nomeInexistente);
		}
		NotVulnerableClass test = new NotVulnerableClass();
		test.notVulnerableMethod(nomeInexistente);
	}
	
	@Test
	public void testNomeDeArquivoNaoPodeConterCaracteresIlegais(){
		expectedEx.expect(IllegalArgumentException.class);
		expectedEx.expectMessage("Caractere inválido presente. Nome do arquivo só pode conter letras "
				+ "maiúsculas e minúsculas, números, ponto e underline.");
		
		String nomeIlegal = "/etc/";
		NotVulnerableClass test = new NotVulnerableClass();
		test.notVulnerableMethod(nomeIlegal);
	}
}
